{
	"name": "trusted__1__run_databricks_notebook",
	"properties": {
		"description": "Executes trusted transformations",
		"activities": [
			{
				"name": "databricks_run_notebook",
				"description": "Invokes the common template that calls Databricks' pipelines. This template is used in all layers.",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "set_notebook_path",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_test_path",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "databricks_run_notebook",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"databricks_notebook_path": {
							"value": "@variables('notebook_path')",
							"type": "Expression"
						},
						"adf": {
							"value": "@pipeline().parameters.adf",
							"type": "Expression"
						},
						"dls": {
							"value": "@pipeline().parameters.dls",
							"type": "Expression"
						},
						"user_parameters": {
							"value": "@pipeline().parameters.user_parameters",
							"type": "Expression"
						},
						"tables": {
							"value": "@pipeline().parameters.tables",
							"type": "Expression"
						},
						"env": {
							"value": "@pipeline().parameters.env.env",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "set_notebook_path",
				"description": "sets Databricks' notebook path",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "notebook_path",
					"value": {
						"value": "@{pipeline().parameters.databricks_notebook_prefix}@{pipeline().parameters.databricks.trs.notebook}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_test_path",
				"description": "Sets Databricks' test notebook path",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "test_path",
					"value": {
						"value": "@{pipeline().parameters.databricks_notebook_prefix}/@{pipeline().parameters.test_base_path}@{\n    substring(\n        pipeline().parameters.databricks.trs.notebook,\n        0,\n        add(\n            lastIndexOf(\n                pipeline().parameters.databricks.trs.notebook,\n                '/'\n            ),\n            1\n        )\n    )}@{pipeline().parameters.test_file_prefix}@{\n        last(\n            split(\n                pipeline().parameters.databricks.trs.notebook,\n                '/'\n            )\n        )}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "if_run_datatest",
				"description": "If run_datatest is true, then we perform the test. Else, skip it.",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "databricks_run_notebook",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@pipeline().parameters.run_datatest",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "skip_datatest",
							"description": "Databricks data test notebook run is skipped by the pipeline config.",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "databricks_run_datatest",
							"description": "Invokes the common template that calls Databricks' pipelines. This template is used in all layers.",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "databricks_run_notebook",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"databricks_notebook_path": {
										"value": "@variables('test_path')",
										"type": "Expression"
									},
									"adf": {
										"value": "@pipeline().parameters.adf",
										"type": "Expression"
									},
									"dls": {
										"value": "@pipeline().parameters.dls",
										"type": "Expression"
									},
									"user_parameters": {
										"value": "@pipeline().parameters.user_parameters",
										"type": "Expression"
									},
									"tables": {
										"value": "@pipeline().parameters.tables",
										"type": "Expression"
									},
									"env": {
										"value": "@pipeline().parameters.env.env",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"dls": {
				"type": "object"
			},
			"tables": {
				"type": "object"
			},
			"databricks": {
				"type": "object"
			},
			"user_parameters": {
				"type": "object",
				"defaultValue": {
					"null": "null"
				}
			},
			"databricks_notebook_prefix": {
				"type": "string",
				"defaultValue": "\"/KEYRUS/dev\""
			},
			"adf": {
				"type": "object"
			},
			"test_base_path": {
				"type": "string"
			},
			"run_datatest": {
				"type": "bool"
			},
			"test_file_prefix": {
				"type": "string"
			},
			"env": {
				"type": "object"
			}
		},
		"variables": {
			"notebook_path": {
				"type": "String"
			},
			"test_path": {
				"type": "String"
			}
		},
		"folder": {
			"name": "templates/trs"
		},
		"annotations": []
	}
}